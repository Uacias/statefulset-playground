apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: juno
spec:
  serviceName: juno-service
  replicas: 1
  selector:
    matchLabels:
      app: juno
  template:
    metadata:
      labels:
        app: juno
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      initContainers:
        - name: init-juno
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Copying data for juno instance $(hostname)..." && \
              cp -r /tmp/data/juno/juno-sepolia /var/lib/juno
          volumeMounts:
            - name: juno-setup-data
              mountPath: /tmp/data/juno
            - name: juno-data
              mountPath: /var/lib/juno
      containers:
        - name: juno
          image: docker.io/nethermind/juno:latest
          ports:
            - containerPort: 6060
          args:
            - "--http"
            - "--http-port"
            - "6060"
            - "--http-host"
            - "0.0.0.0"
            - "--db-path"
            - "/var/lib/juno/juno-sepolia"
            - "--eth-node"
            - "ws://anvil-service:8545"
            - "--network"
            - "sepolia"
          volumeMounts:
            - name: juno-data
              mountPath: /var/lib/juno
      volumes:
        - name: juno-setup-data
          persistentVolumeClaim:
            claimName: juno-setup-data-pvc
  volumeClaimTemplates:
    - metadata:
        name: juno-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: juno-service
spec:
  clusterIP: None
  selector:
    app: juno
  ports:
    - name: rpc
      protocol: TCP
      port: 6060
      targetPort: 6060
